# 游뚹 Puerto de Chancay - Configuraci칩n del Sistema
# Copia este archivo como config.py y personaliza seg칰n tus necesidades

# ============================================================================
# CONFIGURACI칍N PRINCIPAL
# ============================================================================

# OpenAI API Configuration
# Obt칠n tu API key en: https://platform.openai.com/api-keys
OPENAI_API_KEY = "tu-openai-api-key-aqui"

# Puerto del sistema
PORT = 5000

# Modo debug (True para desarrollo, False para producci칩n)
DEBUG = True

# ============================================================================
# CONFIGURACI칍N DEL PUERTO DE CHANCAY
# ============================================================================

# Informaci칩n del puerto
PUERTO_CONFIG = {
    "nombre": "Puerto de Chancay",
    "pais": "Per칰",
    "capacidad_teu_anual": 1500000,  # 1.5 millones TEU
    "profundidad_metros": 17.8,
    "numero_gruas": 12,
    "posiciones_atraque": 4,
    "ubicacion": {
        "latitud": -11.2333,
        "longitud": -77.6167,
        "distancia_lima_km": 78
    }
}

# ============================================================================
# CONFIGURACI칍N DE IA (OpenAI GPT-4o mini)
# ============================================================================

# Modelo de OpenAI a utilizar
OPENAI_MODEL = "gpt-4o-mini"

# Temperatura para respuestas de IA (0.0 = determin칤stico, 1.0 = creativo)
OPENAI_TEMPERATURE = 0.7

# M치ximo de tokens en respuestas
OPENAI_MAX_TOKENS = 500

# ============================================================================
# CONFIGURACI칍N DE DATOS
# ============================================================================

# Ruta al archivo CSV de contenedores
CSV_FILE_PATH = "data/containers_chancay.csv"

# Intervalo de actualizaci칩n de datos (segundos)
DATA_REFRESH_INTERVAL = 30

# ============================================================================
# CONFIGURACI칍N DE M칄TRICAS
# ============================================================================

# KPIs objetivo del puerto
TARGET_METRICS = {
    "efficiency_percentage": 92,          # 92% eficiencia objetivo
    "containers_per_hour": 45,            # 45 contenedores/hora
    "average_dwell_time_hours": 8,        # 8 horas tiempo promedio
    "crane_utilization_percentage": 85    # 85% utilizaci칩n de gr칰as
}

# ============================================================================
# CONFIGURACI칍N DE ALERTAS
# ============================================================================

# Umbrales para alertas autom치ticas
ALERT_THRESHOLDS = {
    "low_efficiency": 80,           # Alerta si eficiencia < 80%
    "high_congestion": 95,          # Alerta si ocupaci칩n > 95%
    "crane_failure": 70,            # Alerta si disponibilidad gr칰as < 70%
    "customs_delay": 24             # Alerta si demora aduanera > 24h
}

# ============================================================================
# CONFIGURACI칍N DE SIMULACI칍N
# ============================================================================

# Par치metros para simular operaciones portuarias realistas
SIMULATION_CONFIG = {
    "ships_arriving_per_day": 8,      # Barcos llegando por d칤a
    "container_types": [              # Tipos de contenedores
        "general", "refrigerado", "peligroso", "perecedero"
    ],
    "origins": [                      # Pa칤ses de origen simulados
        "China", "Korea", "Japan", "Singapore", "Taiwan"
    ],
    "container_sizes": [20, 40],      # Tama침os TEU
    "processing_time_hours": {        # Tiempos de procesamiento
        "general": 2,
        "refrigerado": 3,
        "peligroso": 4,
        "perecedero": 1.5
    }
}

# ============================================================================
# CONFIGURACI칍N DE SEGURIDAD
# ============================================================================

# Headers de seguridad para la aplicaci칩n web
SECURITY_HEADERS = {
    "X-Content-Type-Options": "nosniff",
    "X-Frame-Options": "DENY",
    "X-XSS-Protection": "1; mode=block"
}

# CORS (Cross-Origin Resource Sharing) - para desarrollo
CORS_ORIGINS = [
    "http://localhost:5000",
    "http://127.0.0.1:5000"
]

# ============================================================================
# CONFIGURACI칍N DE LOGGING
# ============================================================================

# Nivel de logging
LOG_LEVEL = "INFO"  # DEBUG, INFO, WARNING, ERROR

# Formato de logs
LOG_FORMAT = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# ============================================================================
# NOTAS DE CONFIGURACI칍N
# ============================================================================

"""
INSTRUCCIONES DE USO:

1. Copia este archivo como 'config.py'
2. Reemplaza 'tu-openai-api-key-aqui' con tu API key real
3. Ajusta los par치metros seg칰n tus necesidades
4. Para producci칩n, usa variables de entorno en lugar de hardcodear secrets

VARIABLES DE ENTORNO SOPORTADAS:
- OPENAI_API_KEY: Tu API key de OpenAI
- PORT: Puerto para el servidor (default: 5000)
- DEBUG: True/False para modo debug
- ENVIRONMENT: development/production

OBTENER API KEY:
- Visita: https://platform.openai.com/api-keys
- Crea una nueva API key
- Aseg칰rate de tener cr칠ditos disponibles

SEGURIDAD:
- NUNCA comitas config.py con API keys reales
- Usa .env para secrets en desarrollo
- Variables de entorno para producci칩n
"""
